        # Tests for lseek


        ##############################################
        # reads combined with lseek
        ##############################################

        # initialise a file with some text
     8: open f1.txt [O_WRONLY;O_CREAT;O_TRUNC] 0o666
        Int1(3)
     9: write (FD 3) "0123456789" 10
        Int1(10)
    10: close (FD 3)
        None1

    12: open f1.txt [O_RDONLY]
        Int1(3)

        # read 2 bytes and then 2 again
    15: read (FD 3) 2
        Bytes1("01")
    16: read (FD 3) 2
        Bytes1("23")

        # jump back to beginning
    19: lseek (FD 3) 0 SEEK_SET
        Int1(0)
    20: read (FD 3) 2
        Bytes1("01")

        # jump to absolute position 4
    23: lseek (FD 3) 4 SEEK_SET
        Int1(4)
    24: read (FD 3) 2
        Bytes1("45")

        # jump after end
    27: lseek (FD 3) 5 SEEK_END
        Int1(15)
    28: read (FD 3) 2
        Bytes1("")

        # jump after end
    31: lseek (FD 3) 5 SEEK_END
        Int1(15)
    32: read (FD 3) 2
        Bytes1("")

        # jump 2 before end
    35: lseek (FD 3) -2 SEEK_END
        Int1(8)
    36: read (FD 3) 2
        Bytes1("89")

        # 2 back and try again
    39: lseek (FD 3) -2 SEEK_CUR
        Int1(8)
    40: read (FD 3) 2
        Bytes1("89")

        # jump just to zero
    43: lseek (FD 3) -10 SEEK_CUR
        Int1(0)
    44: read (FD 3) 2
        Bytes1("01")

        # jump too far back (negative resulting offset)
    47: lseek (FD 3) -10 SEEK_CUR
        EINVAL
    48: read (FD 3) 2
        Bytes1("23")

        # use wrong whence
    51: lseek (FD 3) 0 5
        EINVAL
    52: read (FD 3) 2
        Bytes1("45")

        # check position
    55: lseek (FD 3) 0 SEEK_CUR
        Int1(6)
    56: lseek (FD 3) 0 SEEK_CUR
        Int1(6)

    58: close (FD 3)
        None1

        # use closed file-descriptor
    61: lseek (FD 3) 0 SEEK_CUR
        EBADF

        # use non-existing file-descriptor
    64: lseek (FD 4) 0 SEEK_CUR
        EBADF


        ##############################################
        # write and lseek
        ##############################################

        # jump after end of file should do nothing by itself
    72: open f1.txt [O_WRONLY;O_TRUNC] 0o666
        Int1(3)
    73: lseek (FD 3) 5 SEEK_SET
        Int1(5)
    74: close (FD 3)
        None1

    76: open f1.txt [O_RDONLY]
        Int1(3)
    77: read (FD 3) 100
        Bytes1("")
    78: close (FD 3)
        None1


        # jump after end of file, then write adds 0s
    82: open f1.txt [O_WRONLY;O_TRUNC] 0o666
        Int1(3)
    83: lseek (FD 3) 5 SEEK_SET
        Int1(5)
    84: write (FD 3) "0123456789" 10
        Int1(10)
    85: close (FD 3)
        None1

    87: open f1.txt [O_RDONLY]
        Int1(3)
    88: read (FD 3) 100
        Bytes1("\000\000\000\000\0000123456789")
    89: close (FD 3)
        None1


        # write then jump back and write, jump back, read
    93: open f1.txt [O_RDWR;O_TRUNC] 0o666
        Int1(3)
    94: write (FD 3) "0123456789" 10
        Int1(10)
    95: lseek (FD 3) -2 SEEK_CUR
        Int1(8)
    96: write (FD 3) "XX" 2
        Int1(2)
    97: lseek (FD 3) -6 SEEK_CUR
        Int1(4)
    98: read (FD 3) 2
        Bytes1("45")
    99: write (FD 3) "YY" 2
        Int1(2)
   100: close (FD 3)
        None1

   102: open f1.txt [O_RDONLY]
        Int1(3)
   103: read (FD 3) 100
        Bytes1("012345YYXX")
   104: close (FD 3)
        None1


        ##############################################
        # lseek on dirs is not properly supported and 
        # therefore not tested carefully
        ##############################################

   112: mkdir d1 0o777
        None1
   113: open_close d1/f1.txt [O_WRONLY;O_CREAT] 0o666
        None1
   114: open_close d1/f2.txt [O_WRONLY;O_CREAT] 0o666
        None1
   115: open_close d1/f3.txt [O_WRONLY;O_CREAT] 0o666
        None1


   118: open d1 [O_RDONLY]
        Int1(3)
   119: lseek (FD 3) 0 SEEK_CUR
        Int1(0)
   120: read (FD 3) 10
        EISDIR

   122: lseek (FD 3) 4 SEEK_CUR
        Int1(4)
   123: read (FD 3) 10
        EISDIR

        # the following fail with a oveflow
   126: lseek (FD 3) 0 SEEK_END
        EOVERFLOW
   127: lseek (FD 3) -2000 SEEK_END
        EOVERFLOW

   129: lseek (FD 3) 0 SEEK_SET
        Int1(0)
   130: read (FD 3) 10
        EISDIR

   132: lseek (FD 3) 10 SEEK_SET
        Int1(10)
   133: read (FD 3) 10
        EISDIR

   135: close (FD 3)
        None1
